//
//  BumperFlags.swift
//  Letgo
//
//  GENERATED - DO NOT MODIFY - use flags_generator instead.
// 
//  Copyright Â© 2016 Letgo. All rights reserved.
//

import Foundation
import bumper

extension Bumper  {
    static func initialize() {
        Bumper.initialize(<%= @flags.bumperInitParams %>)
    } <% @flags.flags.each do |flag| %>

    var <%= flag.varName %>: <%= flag.objectName %> {
        guard let value = Bumper.valueForKey(<%= flag.objectName %>.key) else { return <%= flag.defaultCase %> }
        return <%= flag.objectName %>(rawValue: value) ?? <%= flag.defaultCase %>
    }<% end %> 
}

<% @flags.flags.each do |flag| %>
enum <%= flag.objectName %>: String, BumperFlag  {
    case <%= flag.casesParams %>
    static var defaultValue: String { return <%= flag.objectName %><%= flag.defaultCase %>.rawValue }
    static var enumValues: [<%= flag.objectName %>] { return <%= flag.allCases %>}
    static var values: [String] { return enumValues.map{$0.rawValue} }
    static var description: String { return "<%= flag.description %>" }
}
<% end %>
